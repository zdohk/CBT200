CPUID    TITLE 'DISPLAY THE CPU ID FOR ALL PROCESSORS'
* ------------------------------------------------------------------- *
*                                                                     *
*    Written by Rex Widmer                                            *
*    ------- -- --- ------                                            *
*                                                                     *
*    Discovered in Gilbert Saint-flour's archives by Sam Golob.       *
*                                                                     *
*    Fixed for 128 CPU's and to do PUTLINE output instead of TPUT.    *
*      (S.Golob - 2013/04/10)                                         *
*                                                                     *
* ------------------------------------------------------------------- *
         PUSH PRINT
         PRINT ON
* ------------------------------------------------------------------- *
         MACRO
&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &
               &LEN,                    @LENGTH OF MESSAGE             &
               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &
               &EPA=                    EPUTL EPA
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*  --> E@PUT
.*
.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.
.*
.*
.*  ARGUMENTS: -----------------------------------------------------
.*
.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL
.*
.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)
.*
.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT
.*            COMPATIBILITY.
.*
.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE
.*
.*
.*   EXAMPLES: -----------------------------------------------------
.*
.*      1) APUT  'LITERAL'
.*
.*      2) APUT  (R3),80
.*
.*      3) APUT  LABEL
.*
.*      4) APUT  LABEL,40
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*
.*  LOCAL SET SYMBOLS
.*
         LCLC  &SMA                     MESSAGE ADDRESS (REG)
         LCLC  &SML                     MESSAGE LENGTH (REG)
         LCLC  &SEP                     EPA (REGISTER)
.*
         LCLC  &L1,&L2,&L3              LOCAL LABELS
.*
&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS
&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS
&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS
.*
.*
.*  MESSAGE ADDRESS
.*
         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*
.*                                                          *HMD 11/86*
&LABEL   DS    0H                                           *HMD 11/86*
.*                                                          *HMD 11/86*
.A0500   ANOP                                               *HMD 11/86*
         AIF   ('&MSG' NE '').A2000
         MNOTE 8,'''&MSG='' MISSING / REQUIRED'
         MEXIT
.*
.A2000   ANOP
         AIF   ('&MSG'(1,1) NE '(').A2400
&SMA     SETC  '&MSG'(2,K'&MSG-2)
         LR    R1,&SMA                  @MESSAGE TEXT
         AGO   .A2600
.*
.A2400   ANOP
         AIF   ('&MSG'(1,1) NE '''').A2500
         B     &L3                      BRANCH AROUND MESSAGE
&L2      DC    C&MSG
&L3      DS    0H
         LA    R1,&L2                   @MESSAGE
         AGO   .A2600
.*
.A2500   ANOP
         LA    R1,&MSG                  @MESSAGE TEXT
.A2600   ANOP
.*
.*  MESSAGE LENGTH
.*
         AIF   ('&LEN' NE '').A3000
         AIF   ('&MSG'(1,1) NE '''').A2800
         LA    R0,L'&L2                 MESSAGE LENGTH
         AGO   .A3600
.*
.A2800   ANOP
         AIF   ('&MSG'(1,1) EQ '(').A2900
         LA    R0,L'&MSG                MESSAGE LENGTH
         AGO   .A3600
.*
.A2900   ANOP
         MNOTE 8,'''LEN'' MISSING / REQUIRED'
         MEXIT
.*
.A3000   ANOP
         AIF   ('&LEN'(1,1) NE '(').A3400
&SML     SETC  '&LEN'(2,K'&LEN-2)
         LR    R0,&SML                  MESSAGE LENGTH
         AGO   .A3600
.*
.A3400   ANOP
         LA    R0,&LEN                  MESSAGE LENGTH
.A3600   ANOP
.*
.*  RSA
.*
         AIF   ('&RSA' EQ '').A4900
         ST    R14,&RSA                 SAVE REGS 14
.A4900   ANOP
.*
.*  ENTRY POINT
.*
         AIF   ('&EPA' NE '').A5000
         L     R15,=V(EPUTL)            EPA
         AGO   .A5600
.*
.A5000   AIF   ('&EPA'(1,1) NE '(').A5400
&SEP     SETC  '&EPA'(2,K'&EPA-2)
         LR    R15,&SEP                 EPA
         AGO   .A5600
.*
.A5400   ANOP
         L     R15,&EPA                 EPA
.*
.A5600   ANOP
.*
.*  CALL LINKAGE
.*
.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE
.*
         AIF   ('&RSA' EQ '').A6900
         L     R14,&RSA                 RESTORE R14
.A6900   ANOP
.*
.AMEND   MEND
* ------------------------------------------------------------------- *
         MACRO
&NAME    RETRN &RC=
&NAME    L     13,4(0,13)     PICK UP THE OLD SAVE AREA ADDRESS
         AIF   ('&RC' EQ '(R15)').GOTRC
         LM    14,15,12(13)   RESTORE THE REGS. 14,15
         LM    2,12,28(13)    RESTORE THE REGS. 2,3,...,12
         MVI   12(13),X'FF'   SET RETURN INDICATION
         AIF   (T'&RC EQ 'O').NORC
         AIF   ('&RC' LT '4096').RCOK
         MNOTE 1,'RETURN CODE RC=&RC IS > 4095, RC IGNORED'
         AGO   .NORC
.GOTRC   L     14,12(,13)     RESTORE REG 14
         LM    2,12,28(13)    RESTORE THE REGS 2,3,...,12
         MVI   12(13),X'FF'   SET RETURN INDICATION
         BR    14             RETURN
         MEXIT
.RCOK    LA    15,&RC.(0,0)   LOAD RETURN CODE
.NORC    BR    14             RETURN
*
*  REGISTERS 2-15 RESTORED PER STANDARD LINKAGE CONVENTIONS.
*
         MEND
         MACRO
&NAME    CENTER &BASE=12,&SAVE=,&TYPE=E
         LCLA  &A1,&A2
         LCLB  &B1
         LCLC  &C1
&A1      SETA  K'&NAME
&B1      SETB  (T'&SAVE NE 'O')
         AIF   ('&BASE' GT '2' AND '&BASE' LT '13').BASEOK
         MNOTE 13,'REGISTER &BASE MAY NOT BE USED AS A BASE REG.'
         AGO   .MEND
.BASEOK  AIF   (&A1 GE 1).GE1
         MNOTE 13,'NO NAME ENTRY FOR CENTER MACRO'
         AGO   .MEND
.GE1     AIF   (&A1 LE 8).NAMEOK
         MNOTE 13,'THE NAME &NAME CONTAINS &A1 CHARACTERS'
         AGO   .MEND
.NAMEOK  AIF   (&B1).GOTSAVE
&C1      SETC  'SVR&SYSNDX'
         AGO   .SAVEOK
.GOTSAVE ANOP
&C1      SETC  '&SAVE'
.SAVEOK  AIF   ((&A1/2)*2 NE &A1).A1OK
&A1      SETA  &A1+1          MAKE L'NAME ODD IF NECESSARY
.A1OK    ANOP
&A2      SETA  &A1+5
         MNOTE *,' REG &BASE IS THE BASE REG FOR THIS ROUTINE'
         MNOTE *,' &C1 IS THE 18 WORD SAVE AREA FOR THIS ROUTINE'
         MNOTE *,' &NAME IS THE ENTRY POINT FOR THIS ROUTINE'
         AIF   ('&TYPE' EQ 'E').ENTRY
         AIF   ('&TYPE' EQ 'C').CSECT
         MNOTE 9,'INVALID TYPE OPERAND. &TYPE WAS SPECIFIED. E ASSUMED'
         AGO   .ENTRY
.CSECT   ANOP
&NAME    CSECT
         USING *,&BASE
         B     &A2.+20(,15)      BOUNCE AROUND ID
         DC    X'&A1'
         DC    CL&A1'&NAME'
         DC    CL20'COPYRIGHT 1997 RWS'
         STM   14,12,12(13)   SAVE REGS 14,15,0,...,12
         AGO   .COMMON
.ENTRY   ENTRY &NAME
         DC    X'&A1'
         DC    CL&A1'&NAME'
         USING *,&BASE
&NAME    STM   14,12,12(13)   SAVE REGS 14,15,0,...,12
.COMMON  LR    &BASE,15       PROVIDE ADDRESSABILITY
         LA    2,&C1          PICK UP ADDR OF THIS SAVE AREA
         ST    2,8(0,13)      STORE SAVE AREA ADDR IN CALLER
         ST    13,4(0,2)      STORE CALLER'S SAVE AREA ADDR IN SA
         LR    13,2           SET UP SAVE AREA POINTER REG.
         AIF   (&B1).MEND
         B     BYP&SYSNDX     BOUNCE AROUND SAVE AREA
&C1      DC    9D'0' .        SAVE AREA FOR THIS ROUTINE
BYP&SYSNDX EQU *
.MEND    MEND
         MACRO
         SYMREGS
         GBLB  &REGO
         AIF   (NOT &REGO).OK1
         MEXIT
.OK1     ANOP
*
**       GENERAL PURPOSE REGISTER EQUATES
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
**       FLOATING POINT REGISTER EQUATES
*
FR0      EQU   0
FR1      EQU   2
FR2      EQU   4
FR3      EQU   6
&REGO    SETB  1
         MEND
         POP   PRINT
TESTPCCA CENTER TYPE=C
         SYMREGS
TESTPCCA RMODE 24                  KEEP ME BELOW LINE
TESTPCCA AMODE 31                  BUT I CAN SPEAK 31 BIT MODE
*        PROGRAM TO RETREIVE CPU ID-S
*        CONTROL BLOCKS USED - CVT  - CVT MACRO
*                              PCCA VECTOR (NOT DOCUMENTED)
*                              PCCA - IHAPCCA MACRO
         L     R3,016(0,0)         CVT POINTER
         USING CVT,R3
         L     R4,CVTPCCAT         POINTS TO VECTOR OF PCCA POINTERS
         LA    R5,128              MAXIMUM NUMBER OF PCCAS
         LA    R7,BLANKS12         PUT CPU SERIALS HERE
         APUT  CPUIDTIT,L'CPUIDTIT
         APUT  CPUIDTID,L'CPUIDTID
GETDATA  DS    0H
         L     R6,0(,R4)           ADDRESS CURRENT PCCA
         LTR   R6,R6               NO POINTER?
         BZ    SKIPTHIS            NO CPU IN THIS SLOT
         MVC   BLANKS12(12),BLANKS   CLEAR AREA
         MVC   BLANKS12(12),4(R6)  MOVE SERIAL FROM PCCA TO MSG AREA
         APUT  CPUXD,L'CPUXD
*
*        TYPICAL VALUE -  UNKNO ENVIRONMENT  C'FF1C00669021'
*        TYPICAL VALUE -     VM ENVIRONMENT  C'FF1701953090'
*        TYPICAL VALUE -     VM ENVIRONMENT  C'FF2701953090'
*        TYPICAL VALUE -     VM ENVIRONMENT  C'FF3701953090'
*        TYPICAL VALUE - NON-VM ENVIRONMENT  C'620743653090'
*        TYPICAL VALUE - NON-VM ENVIRONMENT  C'621743653090'
*        TYPICAL VALUE - NON-VM ENVIRONMENT  C'622743653090'
*        TYPICAL VALUE - NON-VM ENVIRONMENT  C'623743653090'
*        TYPICAL VALUE - NON-VM ENVIRONMENT  C'624743653090'
*        TYPICAL VALUE - NON-VM ENVIRONMENT  C'625743653090'
*
SKIPTHIS DS    0H
         LA    R4,4(,R4)           TO THE NEXT PCCA
*        LA    R7,12(,R7)          INCREMENT DOWN WORKAREA
         BCT   R5,GETDATA          TILL ALL DONE
*        CALL  SNAP
         RETRN RC=0
CPUIDTIT DC    C'Display CPUIDs For All Processors'
CPUIDTID DC    C'------- ------ --- --- ----------'
CPUXD    DS    0CL20
         DC    C'CPUID   '
BLANKS12 DC    CL12' '
WORKAREA DC    XL256'FF'
BLANKS   DC    CL12' '
         LTORG
CPUID    DSECT
SUBMODEL DS    2C      MAY ALSO CONTAIN VM-INDICATOR C'FF'
ENGINE   DS    C       C'0' TO C'7' HAS BEEN SEEN - ENGINE NUMBER
SERIAL   DS    CL5     ACTUAL SERIAL NUMBER FIELD
MODEL    DS    CL4     GENERIC MODEL NUMBER I.E. 3090
         CVT   DSECT=YES
         IHAPCCA
         END   TESTPCCA
SNAP     TITLE   '***   SNAP --- ROUTINE TO PROVIDE SNAP DUMPS *'
         PUSH PRINT
         PRINT OFF
         MACRO
&NAME    RETRN &RC=
&NAME    L     13,4(0,13)     PICK UP THE OLD SAVE AREA ADDRESS
         AIF   ('&RC' EQ '(R15)').GOTRC
         LM    14,15,12(13)   RESTORE THE REGS. 14,15
         LM    2,12,28(13)    RESTORE THE REGS. 2,3,...,12
         MVI   12(13),X'FF'   SET RETURN INDICATION
         AIF   (T'&RC EQ 'O').NORC
         AIF   ('&RC' LT '4096').RCOK
         MNOTE 1,'RETURN CODE RC=&RC IS > 4095, RC IGNORED'
         AGO   .NORC
.GOTRC   L     14,12(,13)     RESTORE REG 14
         LM    2,12,28(13)    RESTORE THE REGS 2,3,...,12
         MVI   12(13),X'FF'   SET RETURN INDICATION
         BR    14             RETURN
         MEXIT
.RCOK    LA    15,&RC.(0,0)   LOAD RETURN CODE
.NORC    BR    14             RETURN
*
*  REGISTERS 2-15 RESTORED PER STANDARD LINKAGE CONVENTIONS.
*
         MEND
         MACRO
&NAME    CENTER &BASE=12,&SAVE=,&TYPE=E
         LCLA  &A1,&A2
         LCLB  &B1
         LCLC  &C1
&A1      SETA  K'&NAME
&B1      SETB  (T'&SAVE NE 'O')
         AIF   ('&BASE' GT '2' AND '&BASE' LT '13').BASEOK
         MNOTE 13,'REGISTER &BASE MAY NOT BE USED AS A BASE REG.'
         AGO   .MEND
.BASEOK  AIF   (&A1 GE 1).GE1
         MNOTE 13,'NO NAME ENTRY FOR CENTER MACRO'
         AGO   .MEND
.GE1     AIF   (&A1 LE 8).NAMEOK
         MNOTE 13,'THE NAME &NAME CONTAINS &A1 CHARACTERS'
         AGO   .MEND
.NAMEOK  AIF   (&B1).GOTSAVE
&C1      SETC  'SVR&SYSNDX'
         AGO   .SAVEOK
.GOTSAVE ANOP
&C1      SETC  '&SAVE'
.SAVEOK  AIF   ((&A1/2)*2 NE &A1).A1OK
&A1      SETA  &A1+1          MAKE L'NAME ODD IF NECESSARY
.A1OK    ANOP
&A2      SETA  &A1+5
         MNOTE *,' REG &BASE IS THE BASE REG FOR THIS ROUTINE'
         MNOTE *,' &C1 IS THE 18 WORD SAVE AREA FOR THIS ROUTINE'
         MNOTE *,' &NAME IS THE ENTRY POINT FOR THIS ROUTINE'
         AIF   ('&TYPE' EQ 'E').ENTRY
         AIF   ('&TYPE' EQ 'C').CSECT
         MNOTE 9,'INVALID TYPE OPERAND. &TYPE WAS SPECIFIED. E ASSUMED'
         AGO   .ENTRY
.CSECT   ANOP
&NAME    CSECT
         USING *,&BASE
         B     &A2.+20(,15)      BOUNCE AROUND ID
         DC    X'&A1'
         DC    CL&A1'&NAME'
         DC    CL20'COPYRIGHT 1997 RWS'
         STM   14,12,12(13)   SAVE REGS 14,15,0,...,12
         AGO   .COMMON
.ENTRY   ENTRY &NAME
         DC    X'&A1'
         DC    CL&A1'&NAME'
         USING *,&BASE
&NAME    STM   14,12,12(13)   SAVE REGS 14,15,0,...,12
.COMMON  LR    &BASE,15       PROVIDE ADDRESSABILITY
         LA    2,&C1          PICK UP ADDR OF THIS SAVE AREA
         ST    2,8(0,13)      STORE SAVE AREA ADDR IN CALLER
         ST    13,4(0,2)      STORE CALLER'S SAVE AREA ADDR IN SA
         LR    13,2           SET UP SAVE AREA POINTER REG.
         AIF   (&B1).MEND
         B     BYP&SYSNDX     BOUNCE AROUND SAVE AREA
&C1      DC    9D'0' .        SAVE AREA FOR THIS ROUTINE
BYP&SYSNDX EQU *
.MEND    MEND
         MACRO
         SYMREGS
         GBLB  &REGO
         AIF   (NOT &REGO).OK1
         MEXIT
.OK1     ANOP
*
**       GENERAL PURPOSE REGISTER EQUATES
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
**       FLOATING POINT REGISTER EQUATES
*
FR0      EQU   0
FR1      EQU   2
FR2      EQU   4
FR3      EQU   6
&REGO    SETB  1
         MEND
         POP   PRINT
***********************************************************************
**                                                                   **
**       SNAP   A ROUTINE TO PROVIDE A SNAP FACILITY.                **
**                                                                   **
**       THIS ROUTINE PROVIDES THE ABILITY TO REQUEST A SNAP DUMP    **
**       OF THE REGION OF AN APPLICATION PROGRAM.                    **
**                                                                   **
**       TO USE ALL THAT IS NEEDED IS THE FOLLOWING...               **
**           AS REQUIRED CODE   CALL SNAP                            **
**             PROVIDE A     //SNAPOUT  DD  SYSOUT=A DD CARD         **
**                                                                   **
**       5/2/74     R C WIDMER                                       **
**                                                                   **
***********************************************************************
         EJECT
SNAP     CENTER TYPE=C
         SYMREGS
         OPEN  (SNAPOUT,(OUTPUT))
         SNAP  DCB=SNAPOUT,ID=1,PDATA=ALL,SDATA=CB
         CLOSE  (SNAPOUT)
         RETRN RC=0
         EJECT
         PRINT NOGEN
SNAPOUT  DCB   DDNAME=SNAPOUT,DSORG=PS,RECFM=VBA,MACRF=W,LRECL=125,    X
               BLKSIZE=882
*PANVALET-LEVEL
         END
EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&
               OR'
EPUTL    CSECT                                              *HMD 10/85*
         LCLB  &XA                                          *HMD 10/85*
&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . EPUTL
*
*  ALIASES  . . . . . . NONE
*
*  DATE WRITTEN . . . . 06/85
*  UPDATED      . . . . 04/88                                  HD APR88
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88
*
*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR
*
*  PURPOSE:
*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE
*
*
*  DESCRIPTION:
*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.
*    ISSUES SINGLE LINE PUTLINE.
*
*
*  ATTRIBUTES:
*    REENTRANT
*
*  FEATURES:
*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.
*
*  CALLED MODULES:
*    PUTLINE
*
*  ASSUMPTIONS:
*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE
*
*  ABENDS:
*    POSSIBLE 0CX IF BAD ARGUEMNTS
*
*  CAVEATS:
*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB
*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.
*
*
*  INPUT ARGUMENTS:
*    1)  R1 : ADDRESS OF MESSAGE TEXT
*    2)  R0 : LENGTH OF MESSAGE TEXT
*    3) R13 : STANDARD OS SAVE AREA
*    4) R14 : RETURN ADDRESS
*    5) R15 : ENTRY ADDRESS
*
*               ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR
*
RCBA     EQU   100                 BAD MESSAGE ADDRESS
RCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG
*
MAXMSG   EQU   255                 MAXIMUM MESSAGE LENGTH
*
*
*  REGISTERS USED:
*
R0       EQU   0                   MESSAGE LENGTH AT ENTRY
R1       EQU   1                   MESSAGE ADDRESS AT ENTRY
R2       EQU   2                   WORK
RMA      EQU   4                   @MESSAGE TEXT
RML      EQU   5                   MESSAGE LENGTH
RUPT     EQU   6                   @UPT (USER PROFILE TABLE)
RECT     EQU   7                   @ECT
R12      EQU   12                  CSECT BASE
R13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IKJCPPL
         EJECT
         IKJTCB   LIST=YES                                  *HMD 10/85*
         EJECT                                              *HMD 10/85*
         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*
         EJECT
         IHAPSA   LIST=YES                                     HD APR88
         EJECT                                                 HD APR88
PUTLDS   DSECT
         DS    18F                      OS SAVE AREA
PUTAAA   EQU   *
PUTECB   DS    F                        ECB
PUTIOPL  DS    4F                       IOPLADS
PUTBLOK  PUTLINE MF=L
PUTLEN   DS    H                        LENGTH
PUTZZZ   DS    H                        RESERVED
PUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA
PUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS
         EJECT
***********************************************************************
*  SET UP LINKAGE
***********************************************************************
         SPACE 1
EPUTL    CSECT
         AIF  (NOT &XA).X001                                *HMD 10/85*
EPUTL    AMODE 31
.X001    ANOP                                               *HMD 10/85*
         STM   14,12,12(13)       SAVE CALLERS REGS
         LR    R12,R15            COPY EPA
         USING EPUTL,R12          ADDRESSABILITY
         AIF   (NOT &XA).X002                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES            RELATIVE TO 16MB LINE
         AGO   .X003                                        *HMD 10/85*
.X002    ANOP                                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA
.X003    ANOP                                               *HMD 10/85*
         ST    1,8(13)            OUR SAVE AREA POINTER
         ST    13,4(1)            POINTER TO CALLERS SAVE AREA
         LR    13,1               @OUR SAVE AREA
         USING PUTLDS,R13         MAP SA AND WORK AREA
         L     R14,4(R13)         POINT TO CALLERS RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN
         SPACE 2
***********************************************************************
*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE
***********************************************************************
         SPACE 1
         LA    R15,RCBA                 ASSUME BAD ADDRESS
         LTR   RMA,R1                   MESSAGE ADDRESS
         BNP   RETURN                   GOOD ASSUMPTION
         LA    R15,RCBL                 ASSUME BAD LENGTH
         LTR   RML,R0                   POSITIVE?
         BNP   RETURN                   -NO
         C     RML,=A(MAXMSG)           MORE THAN MAX?
         BH    RETURN                   -YES
         SPACE 2
***********************************************************************
*  BUILD PARAMETER LIST
***********************************************************************
         SPACE 1
         LA    R15,4(RML)               MESSAGE LENGTH
         STH   R15,PUTLEN                 PLUS HEADER
         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW
         BCTR  RML,0                    REDUCE FOR MOVE
         EX    RML,PUTMOVE
         EJECT
***********************************************************************
*  DIG UP ADDRESS OF UPT AND ECT
***********************************************************************
         SPACE 1
         L     R2,PSATOLD-PSA           @TCB                   HD APR88
         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA
         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP
         USING CPPL,R2                  MAP CPPL
         L     RUPT,CPPLUPT             @UPT
         L     RECT,CPPLECT             @ECT
         SPACE 2
***********************************************************************
*  ISSUE PUTLINE CALL
***********************************************************************
         SPACE 1
         XC    PUTECB,PUTECB            CLEAR ECB
         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88
         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &
               UPT=(RUPT),              @UPT                           &
               ECT=(RECT),              @ECT                           &
               ECB=PUTECB,              @ECB                           &
               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &
               MF=(E,PUTIOPL)
         EJECT
***********************************************************************
*  RETURN TO CALLER
***********************************************************************
         SPACE 1
RETURN   EQU   *
         LR    2,R13                    @OUR SAVE AREA
         LR    3,R15                    SAVE RETURN CODE
         L     R13,4(R13)               @CALLERS SAVE AREA
         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0
         LR    R15,3                    RESTORE RC
         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS
         SPACE 5
***********************************************************************
*  CONSTANTS AND NON-REENTRANT WORK AREAS
***********************************************************************
         SPACE 1
PUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER
         SPACE 2
         LTORG
         SPACE 2
         END   EPUTL
